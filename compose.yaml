services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: veo-postgres
    environment:
      - POSTGRES_DB=veo_dashboard
      - POSTGRES_USER=${POSTGRES_USER:-veo_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-veo_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backups:/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-veo_user} -d veo_dashboard"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Main application service
  veo-dashboard:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        UID: ${UID:-1001}
        GID: ${GID:-1001}
    image: veo-dashboard:latest
    container_name: veo-dashboard-app
    # Use the same UID/GID as build args for consistent permissions
    user: "${UID:-1001}:${GID:-1001}"
    ports:
      - "3000:3000"
    environment:
      # Next.js
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
      
      # Database settings (PostgreSQL)
      - DATABASE_URL=${DATABASE_URL:-postgresql://veo_user:veo_password@postgres:5432/veo_dashboard}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-veo_dashboard}
      - POSTGRES_USER=${POSTGRES_USER:-veo_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-veo_password}
      
      # Google Cloud settings
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_CLOUD_LOCATION=${GOOGLE_CLOUD_LOCATION:-us-central1}
      - GOOGLE_GENAI_USE_VERTEXAI=${GOOGLE_GENAI_USE_VERTEXAI:-true}
      - GOOGLE_CLOUD_OUTPUT_GCS_URI=${GOOGLE_CLOUD_OUTPUT_GCS_URI}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/application_default_credentials.json
      
      # Concurrency settings
      - MAX_CONCURRENT_TRANSLATIONS=${MAX_CONCURRENT_TRANSLATIONS:-5}
      - MAX_CONCURRENT_VIDEO_GENERATIONS=${MAX_CONCURRENT_VIDEO_GENERATIONS:-2}
      - MAX_CONCURRENT_FFMPEG_PROCESSES=${MAX_CONCURRENT_FFMPEG_PROCESSES:-3}
    volumes:
      # Video storage
      - ./public/videos:/app/public/videos
      # Thumbnail storage
      - ./public/thumbnails:/app/public/thumbnails
      # Google Cloud credentials
      - ./credentials/application_default_credentials.json:/app/credentials/application_default_credentials.json
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # Database backup service
  db-backup:
    image: postgres:16-alpine
    container_name: veo-db-backup
    volumes:
      - ./backups:/app/backups
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB:-veo_dashboard}
      - POSTGRES_USER=${POSTGRES_USER:-veo_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-veo_password}
    command: |
      sh -c "
        while true; do
          timestamp=$$(date +%Y%m%d_%H%M%S)
          PGPASSWORD=$$POSTGRES_PASSWORD pg_dump -h $$POSTGRES_HOST -U $$POSTGRES_USER -d $$POSTGRES_DB > /app/backups/veo-dashboard_$${timestamp}.sql
          find /app/backups -name '*.sql' -mtime +7 -delete
          sleep 86400
        done
      "
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  # PostgreSQL database volume
  postgres-data:
    driver: local
  
  # Application data volumes
  veo-videos:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./public/videos
  veo-thumbnails:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./public/thumbnails

networks:
  default:
    name: veo-dashboard-network